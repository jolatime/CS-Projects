Object subclass: #BTASTNode	instanceVariableNames: 'range'	classVariableNames: ''	poolDictionaries: ''	category: 'BigTalk-AST'!!BTASTNode methodsFor: 'accessing' stamp: 'jws 11/12/2024 21:33'!range	^ range! !!BTASTNode methodsFor: 'accessing' stamp: 'jws 11/12/2024 21:33'!range: anObject	range := anObject.! !BTASTNode subclass: #BTArgumentList	instanceVariableNames: 'arguments'	classVariableNames: ''	poolDictionaries: ''	category: 'BigTalk-AST'!!BTArgumentList methodsFor: 'initialize-release' stamp: 'jws 11/19/2024 21:30'!initialize	super initialize.	arguments := OrderedCollection new.! !!BTArgumentList methodsFor: 'visiting' stamp: 'jws 11/11/2024 11:49'!accept: aVisitor	^aVisitor visitBTArgumentList: self! !!BTArgumentList methodsFor: 'accessing' stamp: 'jws 11/12/2024 22:19'!arguments	^ arguments! !!BTArgumentList methodsFor: 'accessing' stamp: 'jws 11/12/2024 22:19'!arguments: anObject	arguments := anObject.! !!BTArgumentList methodsFor: 'accessing' stamp: 'jpl 12/12/2024 00:09'!argumentsCollection	^arguments asOrderedCollection.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!BTArgumentList class	instanceVariableNames: ''!!BTArgumentList class methodsFor: 'instance creation' stamp: 'jws 11/12/2024 22:42'!arguments: arguments	^self new		arguments: arguments;		yourself! !BTASTNode subclass: #BTAssignmentStatement	instanceVariableNames: 'variableId expression'	classVariableNames: ''	poolDictionaries: ''	category: 'BigTalk-AST'!!BTAssignmentStatement methodsFor: 'visiting' stamp: 'jws 11/11/2024 11:49'!accept: aVisitor	^aVisitor visitBTAssignmentStatement: self! !!BTAssignmentStatement methodsFor: 'accessing' stamp: 'jws 11/12/2024 21:02'!expression	^ expression! !!BTAssignmentStatement methodsFor: 'accessing' stamp: 'jws 11/12/2024 21:02'!expression: anObject	expression := anObject.! !!BTAssignmentStatement methodsFor: 'accessing' stamp: 'jws 11/12/2024 21:02'!variableId	^ variableId! !!BTAssignmentStatement methodsFor: 'accessing' stamp: 'jws 11/12/2024 21:02'!variableId: anObject	variableId := anObject.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!BTAssignmentStatement class	instanceVariableNames: ''!!BTAssignmentStatement class methodsFor: 'instance creation' stamp: 'jws 11/12/2024 21:02'!variableId: aNameexpression: anExpression	^self new		variableId: aName;		expression: anExpression;		yourself! !BTASTNode subclass: #BTBinaryExpression	instanceVariableNames: 'arg1 arg2 operator'	classVariableNames: ''	poolDictionaries: ''	category: 'BigTalk-AST'!!BTBinaryExpression methodsFor: 'visiting' stamp: 'jws 11/11/2024 11:49'!accept: aVisitor	^aVisitor visitBTBinaryExpression: self! !!BTBinaryExpression methodsFor: 'accessing' stamp: 'jws 11/12/2024 22:04'!arg1	^ arg1! !!BTBinaryExpression methodsFor: 'accessing' stamp: 'jws 11/12/2024 22:04'!arg1: anObject	arg1 := anObject.! !!BTBinaryExpression methodsFor: 'accessing' stamp: 'jws 11/12/2024 22:04'!arg2	^ arg2! !!BTBinaryExpression methodsFor: 'accessing' stamp: 'jws 11/12/2024 22:04'!arg2: anObject	arg2 := anObject.! !!BTBinaryExpression methodsFor: 'accessing' stamp: 'jws 11/12/2024 22:04'!operator	^ operator! !!BTBinaryExpression methodsFor: 'accessing' stamp: 'jws 11/12/2024 22:04'!operator: anObject	operator := anObject.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!BTBinaryExpression class	instanceVariableNames: ''!!BTBinaryExpression class methodsFor: 'as yet unclassified' stamp: 'jws 11/12/2024 22:11'!operator: operatorarg1: expr1arg2: expr2	^self new		operator: operator;		arg1: expr1;		arg2: expr2;		yourself		! !BTASTNode subclass: #BTBinaryOperator	instanceVariableNames: 'opSymbol'	classVariableNames: ''	poolDictionaries: ''	category: 'BigTalk-AST'!!BTBinaryOperator methodsFor: 'accessing' stamp: 'jws 11/12/2024 22:08'!opSymbol	^ opSymbol! !!BTBinaryOperator methodsFor: 'accessing' stamp: 'jws 11/12/2024 22:08'!opSymbol: anObject	opSymbol := anObject.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!BTBinaryOperator class	instanceVariableNames: ''!!BTBinaryOperator class methodsFor: 'instance creation' stamp: 'jws 11/12/2024 22:08'!opSymbol: aSymbol	^self new		opSymbol: aSymbol;		yourself! !BTBinaryOperator subclass: #BTArithmeticOperator	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'BigTalk-AST'!!BTArithmeticOperator methodsFor: 'visiting' stamp: 'jws 11/11/2024 11:49'!accept: aVisitor	^aVisitor visitBTArithmeticOperator: self! !BTASTNode subclass: #BTCompoundStatement	instanceVariableNames: 'statements'	classVariableNames: ''	poolDictionaries: ''	category: 'BigTalk-AST'!!BTCompoundStatement methodsFor: 'initialize-release' stamp: 'jws 11/12/2024 21:00'!initialize	super initialize.	statements := OrderedCollection new.! !!BTCompoundStatement methodsFor: 'visiting' stamp: 'jws 11/11/2024 11:49'!accept: aVisitor	^aVisitor visitBTCompoundStatement: self! !!BTCompoundStatement methodsFor: 'accessing' stamp: 'jws 11/12/2024 21:10'!statements	^ statements! !!BTCompoundStatement methodsFor: 'accessing' stamp: 'jws 11/12/2024 21:10'!statements: anObject	statements := anObject.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!BTCompoundStatement class	instanceVariableNames: ''!!BTCompoundStatement class methodsFor: 'instance creation' stamp: 'jws 11/12/2024 21:01'!statements: statements	^self new		statements: statements;		yourself! !BTASTNode subclass: #BTExpression	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'BigTalk-AST'!!BTExpression methodsFor: 'visiting' stamp: 'jws 11/11/2024 11:49'!accept: aVisitor	^aVisitor visitBTExpression: self! !BTASTNode subclass: #BTGroupedExpression	instanceVariableNames: 'expression'	classVariableNames: ''	poolDictionaries: ''	category: 'BigTalk-AST'!!BTGroupedExpression methodsFor: 'accessing' stamp: 'jws 11/13/2024 07:29'!expression	^ expression! !!BTGroupedExpression methodsFor: 'accessing' stamp: 'jws 11/13/2024 07:29'!expression: anObject	expression := anObject.! !!BTGroupedExpression methodsFor: 'visiting' stamp: 'jws 11/20/2024 06:22'!accept: aVisitor	^aVisitor visitBTGroupedExpression: self! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!BTGroupedExpression class	instanceVariableNames: ''!!BTGroupedExpression class methodsFor: 'instance creation' stamp: 'jws 11/13/2024 07:29'!expression: anExpression	^self new		expression: anExpression;		yourself! !BTASTNode subclass: #BTIOStatement	instanceVariableNames: 'expression'	classVariableNames: ''	poolDictionaries: ''	category: 'BigTalk-AST'!!BTIOStatement methodsFor: 'visiting' stamp: 'jws 11/11/2024 11:49'!accept: aVisitor	^aVisitor visitBTIOStatement: self! !!BTIOStatement methodsFor: 'accessing' stamp: 'jws 11/12/2024 20:35'!expression	^ expression! !!BTIOStatement methodsFor: 'accessing' stamp: 'jws 11/12/2024 20:35'!expression: anObject	expression := anObject.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!BTIOStatement class	instanceVariableNames: ''!!BTIOStatement class methodsFor: 'instance creation' stamp: 'jws 11/12/2024 20:36'!expression: anExpression	^self new		expression: anExpression;		yourself! !BTASTNode subclass: #BTIfThenStatement	instanceVariableNames: 'expression trueStatement'	classVariableNames: ''	poolDictionaries: ''	category: 'BigTalk-AST'!!BTIfThenStatement methodsFor: 'visiting' stamp: 'jws 11/11/2024 11:49'!accept: aVisitor	^aVisitor visitBTIfThenStatement: self! !!BTIfThenStatement methodsFor: 'accessing' stamp: 'jws 11/12/2024 21:54'!expression	^ expression! !!BTIfThenStatement methodsFor: 'accessing' stamp: 'jws 11/12/2024 21:54'!expression: anObject	expression := anObject.! !!BTIfThenStatement methodsFor: 'accessing' stamp: 'jws 11/12/2024 21:54'!trueStatement	^ trueStatement! !!BTIfThenStatement methodsFor: 'accessing' stamp: 'jws 11/12/2024 21:54'!trueStatement: anObject	trueStatement := anObject.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!BTIfThenStatement class	instanceVariableNames: ''!!BTIfThenStatement class methodsFor: 'instance creation' stamp: 'jws 11/12/2024 21:55'!expression: expressiontrueStatement: trueStatement	^self new		expression: expression;		trueStatement: trueStatement;		yourself! !BTIfThenStatement subclass: #BTIfThenElseStatement	instanceVariableNames: 'falseStatement'	classVariableNames: ''	poolDictionaries: ''	category: 'BigTalk-AST'!!BTIfThenElseStatement methodsFor: 'visiting' stamp: 'jws 11/11/2024 11:49'!accept: aVisitor	^aVisitor visitBTIfThenElseStatement: self! !!BTIfThenElseStatement methodsFor: 'accessing' stamp: 'jws 11/12/2024 21:54'!falseStatement	^ falseStatement! !!BTIfThenElseStatement methodsFor: 'accessing' stamp: 'jws 11/12/2024 21:54'!falseStatement: anObject	falseStatement := anObject.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!BTIfThenElseStatement class	instanceVariableNames: ''!!BTIfThenElseStatement class methodsFor: 'instance creation' stamp: 'jws 11/12/2024 21:56'!expression: expressiontrueStatement: trueStatementfalseStatement: falseStatement	^(self expression: expression trueStatement: trueStatement)		falseStatement: falseStatement;		yourself! !BTBinaryOperator subclass: #BTLogicalOperator	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'BigTalk-AST'!!BTLogicalOperator methodsFor: 'visiting' stamp: 'jws 11/11/2024 11:49'!accept: aVisitor	^aVisitor visitBTLogicalOperator: self! !BTASTNode subclass: #BTMethodBody	instanceVariableNames: 'variables statement'	classVariableNames: ''	poolDictionaries: ''	category: 'BigTalk-AST'!!BTMethodBody methodsFor: 'initialize-release' stamp: 'jws 11/12/2024 22:20'!initialize	super initialize.	variables := BTVariables new! !!BTMethodBody methodsFor: 'visiting' stamp: 'jws 11/11/2024 11:49'!accept: aVisitor	^aVisitor visitBTMethodBody: self! !!BTMethodBody methodsFor: 'accessing' stamp: 'jws 11/12/2024 21:38'!statement	^ statement! !!BTMethodBody methodsFor: 'accessing' stamp: 'jws 11/12/2024 21:38'!statement: anObject	statement := anObject.! !!BTMethodBody methodsFor: 'accessing' stamp: 'jws 11/12/2024 21:38'!variables	^ variables! !!BTMethodBody methodsFor: 'accessing' stamp: 'jws 11/12/2024 21:38'!variables: anObject	variables := anObject.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!BTMethodBody class	instanceVariableNames: ''!!BTMethodBody class methodsFor: 'instance creation' stamp: 'jws 11/12/2024 21:40'!variables: variableDeclarationsbody: aMethodBody	^self new		variables: variableDeclarations;		body: aMethodBody;		yourself! !!BTMethodBody class methodsFor: 'instance creation' stamp: 'jws 11/12/2024 21:41'!variables: variableDeclarationsstatement: statement	^self new		variables: variableDeclarations;		statement: statement;		yourself! !BTASTNode subclass: #BTMethodDeclaration	instanceVariableNames: 'identifier parameters methodBody'	classVariableNames: ''	poolDictionaries: ''	category: 'BigTalk-AST'!!BTMethodDeclaration methodsFor: 'visiting' stamp: 'jws 11/11/2024 11:49'!accept: aVisitor	^aVisitor visitBTMethodDeclaration: self! !!BTMethodDeclaration methodsFor: 'accessing' stamp: 'jws 11/12/2024 21:25'!identifier	^ identifier! !!BTMethodDeclaration methodsFor: 'accessing' stamp: 'jws 11/12/2024 21:25'!identifier: anObject	identifier := anObject.! !!BTMethodDeclaration methodsFor: 'accessing' stamp: 'jws 11/12/2024 21:25'!methodBody	^ methodBody! !!BTMethodDeclaration methodsFor: 'accessing' stamp: 'jws 11/12/2024 21:25'!methodBody: anObject	methodBody := anObject.! !!BTMethodDeclaration methodsFor: 'accessing' stamp: 'jws 11/12/2024 21:25'!parameters	^ parameters! !!BTMethodDeclaration methodsFor: 'accessing' stamp: 'jws 11/12/2024 21:25'!parameters: anObject	parameters := anObject.! !!BTMethodDeclaration methodsFor: 'as yet unclassified' stamp: 'jpl 12/12/2024 14:36'!isProcedure	^self returnType isNil.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!BTMethodDeclaration class	instanceVariableNames: ''!!BTMethodDeclaration class methodsFor: 'instance creation' stamp: 'jws 11/12/2024 21:26'!identifier: aNameparameters: aParameterListmethodBody: aMethodBody	^self new		identifier: aName;		parameters: aParameterList;		methodBody: aMethodBody;		yourself! !BTMethodDeclaration subclass: #BTFunction	instanceVariableNames: 'returnType'	classVariableNames: ''	poolDictionaries: ''	category: 'BigTalk-AST'!!BTFunction methodsFor: 'visiting' stamp: 'jws 11/11/2024 11:49'!accept: aVisitor	^aVisitor visitBTFunction: self! !!BTFunction methodsFor: 'accessing' stamp: 'jws 11/12/2024 21:25'!returnType	^ returnType! !!BTFunction methodsFor: 'accessing' stamp: 'jws 11/12/2024 21:25'!returnType: anObject	returnType := anObject.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!BTFunction class	instanceVariableNames: ''!!BTFunction class methodsFor: 'instance creation' stamp: 'jws 11/12/2024 21:27'!identifier: aNameparameters: aParameterListmethodBody: aMethodBodyreturnType: aType	^(self identifier: aName parameters: aParameterList methodBody: aMethodBody)		returnType: aType;		yourself! !BTASTNode subclass: #BTMethods	instanceVariableNames: 'declarations'	classVariableNames: ''	poolDictionaries: ''	category: 'BigTalk-AST'!!BTMethods methodsFor: 'initialize-release' stamp: 'jws 11/12/2024 20:41'!initialize	super initialize.	declarations := OrderedCollection new.! !!BTMethods methodsFor: 'visiting' stamp: 'jws 11/11/2024 11:49'!accept: aVisitor	^aVisitor visitBTMethods: self! !!BTMethods methodsFor: 'accessing' stamp: 'jws 11/12/2024 20:41'!declarations	^ declarations! !!BTMethods methodsFor: 'accessing' stamp: 'jws 11/12/2024 20:41'!declarations: anObject	declarations := anObject.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!BTMethods class	instanceVariableNames: ''!!BTMethods class methodsFor: 'instance creation' stamp: 'jws 11/12/2024 22:21'!declarations: methodDeclarations 	^self new		declarations: methodDeclarations;		yourself! !BTASTNode subclass: #BTParameterList	instanceVariableNames: 'parameters'	classVariableNames: ''	poolDictionaries: ''	category: 'BigTalk-AST'!!BTParameterList methodsFor: 'initialize-release' stamp: 'jws 11/12/2024 21:35'!initialize	super initialize.	parameters := OrderedCollection new.! !!BTParameterList methodsFor: 'visiting' stamp: 'jws 11/11/2024 11:49'!accept: aVisitor	^aVisitor visitBTParameterList: self! !!BTParameterList methodsFor: 'accessing' stamp: 'jws 11/12/2024 21:35'!parameters	^ parameters! !!BTParameterList methodsFor: 'accessing' stamp: 'jws 11/12/2024 21:35'!parameters: anObject	parameters := anObject.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!BTParameterList class	instanceVariableNames: ''!!BTParameterList class methodsFor: 'instance creation' stamp: 'jws 11/12/2024 21:36'!parameters: aParameterList	^self new		parameters: aParameterList;		yourself! !BTMethodDeclaration subclass: #BTProcedure	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'BigTalk-AST'!!BTProcedure methodsFor: 'visiting' stamp: 'jws 11/11/2024 11:49'!accept: aVisitor	^aVisitor visitBTProcedure: self! !BTASTNode subclass: #BTProcedureCall	instanceVariableNames: 'identifier arguments'	classVariableNames: ''	poolDictionaries: ''	category: 'BigTalk-AST'!!BTProcedureCall methodsFor: 'visiting' stamp: 'jws 11/11/2024 11:49'!accept: aVisitor	^aVisitor visitBTProcedureCall: self! !!BTProcedureCall methodsFor: 'accessing' stamp: 'jws 11/12/2024 22:13'!arguments	^ arguments! !!BTProcedureCall methodsFor: 'accessing' stamp: 'jws 11/12/2024 22:13'!arguments: anObject	arguments := anObject.! !!BTProcedureCall methodsFor: 'accessing' stamp: 'jws 11/12/2024 22:13'!identifier	^ identifier! !!BTProcedureCall methodsFor: 'accessing' stamp: 'jws 11/12/2024 22:13'!identifier: anObject	identifier := anObject.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!BTProcedureCall class	instanceVariableNames: ''!!BTProcedureCall class methodsFor: 'instance creation' stamp: 'jws 11/12/2024 22:14'!identifier: identifierarguments: arguments	^self new		identifier: identifier;		arguments: arguments;		yourself! !BTProcedureCall subclass: #BTFunctionCall	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'BigTalk-AST'!!BTFunctionCall methodsFor: 'visiting' stamp: 'jws 11/11/2024 11:49'!accept: aVisitor	^aVisitor visitBTFunctionCall: self! !!BTFunctionCall methodsFor: 'visiting' stamp: 'jpl 12/12/2024 00:04'!arguments	^arguments.! !!BTFunctionCall methodsFor: 'visiting' stamp: 'jpl 12/12/2024 00:11'!argumentsCollection	^arguments asOrderedCollection.! !BTASTNode subclass: #BTProgram	instanceVariableNames: 'variables methods statement'	classVariableNames: ''	poolDictionaries: ''	category: 'BigTalk-AST'!!BTProgram methodsFor: 'visiting' stamp: 'jws 11/11/2024 11:49'!accept: aVisitor	^aVisitor visitBTProgram: self! !!BTProgram methodsFor: 'accessing' stamp: 'jws 11/12/2024 20:21'!methods	^ methods! !!BTProgram methodsFor: 'accessing' stamp: 'jws 11/12/2024 20:26'!methods: aMethodsNodeOrNil	methods := aMethodsNodeOrNil isNil		ifTrue: [BTMethods new]		ifFalse: [aMethodsNodeOrNil]! !!BTProgram methodsFor: 'accessing' stamp: 'jws 11/12/2024 20:21'!statement	^ statement! !!BTProgram methodsFor: 'accessing' stamp: 'jws 11/12/2024 20:21'!statement: anObject	statement := anObject.! !!BTProgram methodsFor: 'accessing' stamp: 'jws 11/12/2024 20:21'!variables	^ variables! !!BTProgram methodsFor: 'accessing' stamp: 'jws 11/12/2024 20:26'!variables: aVariablesNodeOrNil	variables := aVariablesNodeOrNil isNil		ifTrue: [BTVariables new]		ifFalse: [aVariablesNodeOrNil]! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!BTProgram class	instanceVariableNames: ''!!BTProgram class methodsFor: 'instance creation' stamp: 'jws 11/12/2024 20:23'!variables: aVariablesNodemethods: aMethodsNodestatement: aStatementNode	^self new		variables: aVariablesNode;		methods: aMethodsNode;		statement: aStatementNode;		yourself! !BTBinaryOperator subclass: #BTRelationalOperator	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'BigTalk-AST'!!BTRelationalOperator methodsFor: 'visiting' stamp: 'jws 11/11/2024 11:49'!accept: aVisitor	^aVisitor visitBTRelationalOperator: self! !BTASTNode subclass: #BTStatement	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'BigTalk-AST'!!BTStatement methodsFor: 'visiting' stamp: 'jws 11/11/2024 11:49'!accept: aVisitor	^aVisitor visitBTStatement: self! !BTASTNode subclass: #BTType	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'BigTalk-AST'!!BTType methodsFor: 'visiting' stamp: 'jws 11/11/2024 11:49'!accept: aVisitor	^aVisitor visitBTType: self! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!BTType class	instanceVariableNames: 'default'!!BTType class methodsFor: 'instance creation' stamp: 'jws 10/30/2024 11:34'!boolean		^BTBooleanType default! !!BTType class methodsFor: 'instance creation' stamp: 'jws 10/30/2024 11:17'!integer		^BTIntegerType default! !!BTType class methodsFor: 'instance creation' stamp: 'jws 10/30/2024 11:30'!string		^BTStringType default! !!BTType class methodsFor: 'accessing' stamp: 'jws 10/30/2024 11:21'!default		default isNil ifTrue: [default := self new].	^default! !BTType subclass: #BTBooleanType	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'BigTalk-AST'!!BTBooleanType methodsFor: 'type checking' stamp: 'jws 10/30/2024 11:35'!checkType: aValue	aValue isBoolean		ifFalse: [BTTypeError signal: 'incompatible type']! !!BTBooleanType methodsFor: 'visiting' stamp: 'jws 11/18/2024 11:23'!accept: aVisitor	^aVisitor visitBTBooleanType: self ! !BTType subclass: #BTIntegerType	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'BigTalk-AST'!!BTIntegerType methodsFor: 'type checking' stamp: 'jws 10/30/2024 11:27'!checkType: aValue	"Throw a type error is aValue is not an integer."		aValue isInteger		ifFalse: [BTTypeError signal: 'incompatible type']! !!BTIntegerType methodsFor: 'visiting' stamp: 'jws 11/18/2024 11:24'!accept: aVisitor	^aVisitor visitBTIntegerType: self ! !!BTIntegerType methodsFor: 'as yet unclassified' stamp: 'jpl 12/11/2024 20:11'!anyValue	^0.! !!BTIntegerType methodsFor: 'as yet unclassified' stamp: 'jpl 12/6/2024 10:28'!default	^self new.! !BTType subclass: #BTStringType	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'BigTalk-AST'!!BTStringType methodsFor: 'type checking' stamp: 'jws 10/30/2024 11:32'!checkType: aValue	aValue isString		ifFalse: [BTTypeError signal: 'incompatible type']! !!BTStringType methodsFor: 'visiting' stamp: 'jws 11/18/2024 11:24'!accept: aVisitor	^aVisitor visitBTStringType: self ! !!BTStringType methodsFor: 'as yet unclassified' stamp: 'jpl 12/11/2024 20:12'!anyValue	^''.! !!BTStringType methodsFor: 'as yet unclassified' stamp: 'jpl 12/6/2024 10:30'!default	^self new.! !BTASTNode subclass: #BTUnaryExpression	instanceVariableNames: 'expression'	classVariableNames: ''	poolDictionaries: ''	category: 'BigTalk-AST'!!BTUnaryExpression methodsFor: 'visiting' stamp: 'jws 11/11/2024 11:49'!accept: aVisitor	^aVisitor visitBTUnaryExpression: self! !!BTUnaryExpression methodsFor: 'accessing' stamp: 'jws 11/13/2024 07:31'!expression	^ expression! !!BTUnaryExpression methodsFor: 'accessing' stamp: 'jws 11/13/2024 07:31'!expression: anObject	expression := anObject.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!BTUnaryExpression class	instanceVariableNames: ''!!BTUnaryExpression class methodsFor: 'instance creation' stamp: 'jws 11/13/2024 07:31'!expression: anExpression	^self new		expression: anExpression;		yourself! !BTASTNode subclass: #BTVariableDeclaration	instanceVariableNames: 'type name'	classVariableNames: ''	poolDictionaries: ''	category: 'BigTalk-AST'!!BTVariableDeclaration methodsFor: 'visiting' stamp: 'jws 11/11/2024 11:49'!accept: aVisitor	^aVisitor visitBTVariableDeclaration: self! !!BTVariableDeclaration methodsFor: 'accessing' stamp: 'jws 11/12/2024 20:53'!name	^name! !!BTVariableDeclaration methodsFor: 'accessing' stamp: 'jws 11/12/2024 20:53'!name: anObject	name := anObject.! !!BTVariableDeclaration methodsFor: 'accessing' stamp: 'jws 11/12/2024 20:53'!type	^ type! !!BTVariableDeclaration methodsFor: 'accessing' stamp: 'jws 11/12/2024 20:53'!type: anObject	type := anObject.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!BTVariableDeclaration class	instanceVariableNames: ''!!BTVariableDeclaration class methodsFor: 'instance creation' stamp: 'jws 11/12/2024 20:54'!type: aTypename: aName	^self new		type: aType;		name: aName;		yourself! !BTASTNode subclass: #BTVariableReference	instanceVariableNames: 'identifier'	classVariableNames: ''	poolDictionaries: ''	category: 'BigTalk-AST'!!BTVariableReference methodsFor: 'visiting' stamp: 'jws 11/11/2024 11:49'!accept: aVisitor	^aVisitor visitBTVariableReference: self! !!BTVariableReference methodsFor: 'accessing' stamp: 'jws 11/12/2024 21:08'!identifier	^ identifier! !!BTVariableReference methodsFor: 'accessing' stamp: 'jws 11/12/2024 21:08'!identifier: anObject	identifier := anObject.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!BTVariableReference class	instanceVariableNames: ''!!BTVariableReference class methodsFor: 'instance creation' stamp: 'jws 11/12/2024 21:08'!identifier: anIdentifier	^self new		identifier: anIdentifier;		yourself! !BTASTNode subclass: #BTVariables	instanceVariableNames: 'declarations'	classVariableNames: ''	poolDictionaries: ''	category: 'BigTalk-AST'!!BTVariables methodsFor: 'initialize-release' stamp: 'jws 11/12/2024 20:39'!initialize	super initialize.	declarations := OrderedCollection new! !!BTVariables methodsFor: 'visiting' stamp: 'jws 11/11/2024 11:49'!accept: aVisitor	^aVisitor visitBTVariables: self! !!BTVariables methodsFor: 'accessing' stamp: 'jws 11/12/2024 20:40'!declarations	^ declarations! !!BTVariables methodsFor: 'accessing' stamp: 'jws 11/12/2024 20:40'!declarations: anObject	declarations := anObject.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!BTVariables class	instanceVariableNames: ''!!BTVariables class methodsFor: 'instance creation' stamp: 'jws 11/12/2024 20:59'!declarations: variableDeclarations	^self new		declarations: variableDeclarations;		yourself! !BTASTNode subclass: #BTWhileStatement	instanceVariableNames: 'expression statement'	classVariableNames: ''	poolDictionaries: ''	category: 'BigTalk-AST'!!BTWhileStatement methodsFor: 'visiting' stamp: 'jws 11/11/2024 11:49'!accept: aVisitor	^aVisitor visitBTWhileStatement: self! !!BTWhileStatement methodsFor: 'accessing' stamp: 'jws 11/12/2024 22:53'!expression	^ expression! !!BTWhileStatement methodsFor: 'accessing' stamp: 'jws 11/12/2024 22:53'!expression: anObject	expression := anObject.! !!BTWhileStatement methodsFor: 'accessing' stamp: 'jws 11/12/2024 22:53'!statement	^ statement! !!BTWhileStatement methodsFor: 'accessing' stamp: 'jws 11/12/2024 22:53'!statement: anObject	statement := anObject.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!BTWhileStatement class	instanceVariableNames: ''!!BTWhileStatement class methodsFor: 'instance creation' stamp: 'jws 11/12/2024 22:54'!expression: expressionstatement: statement	^self new		expression: expression;		statement: statement;		yourself! !BTIOStatement subclass: #BTWriteBoolean	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'BigTalk-AST'!!BTWriteBoolean methodsFor: 'visiting' stamp: 'jws 11/15/2024 11:37'!accept: aVisitor	^aVisitor visitWriteBoolean: self! !BTIOStatement subclass: #BTWriteInteger	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'BigTalk-AST'!!BTWriteInteger methodsFor: 'visiting' stamp: 'jws 11/15/2024 11:38'!accept: aVisitor	^aVisitor visitWriteInteger: self! !BTASTNode subclass: #BTWriteLine	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'BigTalk-AST'!!BTWriteLine methodsFor: 'visiting' stamp: 'jws 11/11/2024 11:49'!accept: aVisitor	^aVisitor visitBTWriteLine: self! !BTIOStatement subclass: #BTWriteString	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'BigTalk-AST'!!BTWriteString methodsFor: 'visiting' stamp: 'jws 11/15/2024 11:38'!accept: aVisitor	^aVisitor visitWriteString: self! !BTASTNode subclass: #BTidentifier	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'BigTalk-AST'!!BTidentifier methodsFor: 'visiting' stamp: 'jws 11/11/2024 11:49'!accept: aVisitor	^aVisitor visitBTidentifier: self! !BTASTNode subclass: #BTkeyword	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'BigTalk-AST'!!BTkeyword methodsFor: 'visiting' stamp: 'jws 11/11/2024 11:49'!accept: aVisitor	^aVisitor visitBTkeyword: self! !BTASTNode subclass: #BTliteral	instanceVariableNames: 'value'	classVariableNames: ''	poolDictionaries: ''	category: 'BigTalk-AST'!!BTliteral methodsFor: 'accessing' stamp: 'jws 11/12/2024 20:44'!value	^value! !!BTliteral methodsFor: 'accessing' stamp: 'jws 11/12/2024 20:44'!value: anObject	value := anObject.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!BTliteral class	instanceVariableNames: ''!!BTliteral class methodsFor: 'instance creation' stamp: 'jws 11/12/2024 20:45'!value: aLiteralValue	^self new		value: aLiteralValue;		yourself! !BTliteral subclass: #BTliteralBoolean	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'BigTalk-AST'!!BTliteralBoolean methodsFor: 'visiting' stamp: 'jws 11/11/2024 11:49'!accept: aVisitor	^aVisitor visitBTliteralBoolean: self! !BTliteral subclass: #BTliteralInteger	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'BigTalk-AST'!!BTliteralInteger methodsFor: 'visiting' stamp: 'jws 11/11/2024 11:49'!accept: aVisitor	^aVisitor visitBTliteralInteger: self! !BTliteral subclass: #BTliteralString	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'BigTalk-AST'!!BTliteralString methodsFor: 'visiting' stamp: 'jws 11/11/2024 11:49'!accept: aVisitor	^aVisitor visitBTliteralString: self! !BTASTNode subclass: #BTword	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'BigTalk-AST'!!BTword methodsFor: 'visiting' stamp: 'jws 11/11/2024 11:49'!accept: aVisitor	^aVisitor visitBTword: self! !